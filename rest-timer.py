#!/bin/python3

"""This is a simple and small but useful GUI application that notifies you
to give your eyes a rest after the time you specify.

https://github.com/AmirAli104/rest-timer

License: MIT License
"""

import tkinter as tk
from tkinter import messagebox
from tkinter import ttk
import re

timer_btn_color = '#00bc00'
after_id = None
APP_TITLE = 'Rest Timer'

ICON_BYTES = b'\x89PNG\r\n\x1a\n\x00\x00\x00\rIHDR\x00\x00\x00#\x00\x00\x00#\x08\x02\x00\x00\x00\x91\xbb$\x0e\x00\x00\x06\x98IDATx\x9c\xadV\xedo[W\x1d~\xce9\xf7\\\xbf\xc5\xb1\x938N\x9c\x96.M\x9a\xcc\xa5-\x9964\x02\xdb\xe8\x1bM\'\xb5\xd2*\xc1\x07\x90&\xb1\xb2!Q\xf6\x01\x01\x1b\x82?`\x1f\xf9\x08\xaa\xda2\x01\x9d\x18H\xbcL\xa0\r\xba6+\x85\xa5\xedZ)\xa4]\xb7\xa4n\xe2$K\x1d7q\x9c\xc4\x8e\xed\\\xdf{\xcf9|H\xec\xdc\x1b;e\x12;\x1f\xacs\x7f\xbe\xf7\xf7\x9c\xf3\xfc\x9e\xdf\x0b)\xce+T\x17\x01\x1cO\x9f\xed\xa2\x9ba\x08\\\x96O\xbfH\xcd\xc6\xfd\x97\x03IU~\xc9\xd60\xe4S\xc0;Y!\x1b\x16\xad\xfe\xab\xa4\xde7\n\x84\x80\xb2u\x83\x14Pr\x0b\x80zF\x07R\xd5{-L\xc5.,\x99M\x19\xd2V\x84\x92p\x9b\x97q\xfa?\xe2\xba\xf9N\xc4A\xdd\xa6\xf7\x1c\x16\xae\xe3\xca\x1ff.\xfc\xf2\x1e\xd7\xa9Y\x16\x03\xa7z\x0e|\xbb\xd3.\xbb\xf9\xac\xa5\xae\xe2\x87\xa26B\xb5\x87\x02\x98\x06MG(\xeail\xf5\x94\xf2V(\xea\r\xc5\xbc\\\x07\xd3*\xdf\xaa\x8a\x87M\xc0\x15\xec-\xe2\xe4&S\xe3\xc8/\x94\x13W\xb3\xc9\xe1E\xca\x88\xb0%c$\xf9\xc1\xa2\xb2\xd1\xdb\xdf\xdc\xd0\xac\xdbf=\xeaT\x85\x15\x05\x00\xa4\x98Q.\xab\xfbZ\x84\x822\x8c\\H\xbfw6\x99\x9f7b\xf1\xc6m\xf1\xc6@\x13/.Z\xa9\xb1\\\xfa\xeeJ\xb8\xc3\xf7\xb5\xefv\xef;\xdc&\xacz!sD\xfdaH\x84\x80Pu\xf9\xf5\xc9K\xe7&\xfa\x06\xda\x0f\xbe\xb0\xb3\xb5\xd3o\xae\x8a\xa1\xdf\xcf\xf4\x7fc\xbb/\xa8\xcd%K\xff|=y\xe7\xf2\xfc\x91\xef\xef\xda\xff\xfc#R\x10\xb5\xb5@4\x17\x8c\x9b=\xc6q\xe3/\xb3\x83g\'\x8e\xfd\xa0w\xff\x0b\x8f(\ta\xc34\xac\x95\xc5\xb2i(\x7f\x88\xc6z\x1a\xbe\xf9\xda\xbe+oL\xbf\xfb\x8b{\xc1\x16\xfd\x8b\xc7;\xac\xf2\x96H\xa48\xaf\\\xb2\xae@2\x1d\x8b)\xe3\xf4\x8b\xd7\xf7\r\xb4?\xf7j\xfc\xce`\xa6\xb53\xd0\xd6\xe57\re\x9b\x82\xeb\x0c\x84@\x81Ph:\xfe\xfc\xda\xe8\xe8P\xe6\xd4\xb9\'\xc3m^a\xd7\x8f:\xdd\xf4\\%\x901\x8c\xfc}\x16\x84\xec\x7f~\'\x80\xc9\x91\xa5\xf3\xaf\xfe\xe7\x93\x0fs\x1e\x1f\xf1\xf85\x80\xac}\xa2$\x94\xc4\x81\x93\x9d\xd2\x92#\x17\x1eP\xee\x00p+\x8bn\xf0F\\r\xb7M\x95\xb8\xb6\xd0\xd3\x1fi\x8ay\x94\xc4\xc0\xa9\xee\x1d{C\xe7_\x19I\\_dUq\x13\x00P\n\xcd\x1d\xbe\x9e\xfeHbh\xc16\x1c\x81vW\x00\xba\xb9(\xacUC\x8ab\xce\xce/\x18\xb1]\xc1\xc2Ry%kr\x0f;\xf1\xb3\xdd{\x0e\xb6\xfd\xee\xa7\xb7\xdex\xe5\xd6\xe4\xade\xc6\xd7\xcfTX2\x8b9\xb3\xe3\xd1\xe0R\xbad\x14\xedu\x9a\x9ciK\x9c\x8a\x80K\xfb \x10\xa6P\x12\x94\x93\xcb\xbf\x9e\x0e6{\x9f\xfe\xd6\x0eMc\xc7~\xd8{\x7f4\xff\xde\xaf\x92\xdc\xcb\xba\x1e\x0f\x13\x02\x10\x0c\xbf\x9d.\xe5\xadp\xbbW\xd8J\x08I\x08\x94\xaas\'G\xe6:\x05\xaa\xc0\xbd\x8c0b\x19\xe2\xd0\xc9\x9d\xc2&R\x02\n\x9a\x87\x1ez\xa9+\x18\xd1\x1f?\xd6\xa1\xe4\xba\xc7\'\x8eoc\x9a\xba\xf1VJ\xd3\tc\xb4\x0e\x0c\x01\xd4\xa6\n[\x01\x93\x02\xfeF\xde\xd4\xee\x9b\x1d\xcb\xfb\x1b;\x85\r)\x00\xc0.#\xfe\x95\xc8\xee\xa7"RBX\xeb\xbe\xfc\x8d\x1a\xd30;\xb6\xd2\x14\xf3\xf9\x1a4)7\xc7\xa2\x12\xa7\xdaE\x00\x02\xca\xb1\xe7@t\xfcFv~\xbaT\xed\x14 \x10\x16\xa4\r\xe9\x902e\xc8\xcc\xac\x8e\xdf\xc8\xc6\x9f\x892\xdd\xc1M5\x1c\xaa\x8aT\xdbg\x15\x84\x85/\x1ci\xf7\x85\xf8\xe0\xd9\t\xa5\x14e\x1b\xaf\x99e\xa1\xaa\x07bPP\x83g\xc7u?\xeb\x1b\x88\xad\'\x13\xa93(8j\xb93Z\x04\xd2F0\xa2?\xfbr\xef\x9d\xc1\xb9\x8bg\x92\x80\xe2\x1e0\x1d\xab+\xe5Kg&J\xcbe\xc6\xc1=PP\x83g\x92\x1f\xbe\xfb\xe0\xe8\xcb=\xa1\xa8\xbe~Wg]wi\xafF\xe5k\x1b\xdb\xc4\xbe\xc3\xd1\xd2r\xfco?\x1fK\'\xf2\x87_\xea\x8e\xf54p\x0f\x0b4q\xcd\xc3\xa4-S\xf7\n\x83\xe7&\xee]\xcb\x1e\xfbq\xfc\xb1\xa3\xed\xf6V\xa5h\xbd\x96Wg#\xb29\xab\xd7\x8a,\xe3\x18}?s\xf1\xf4xv\xa6\xb4\xfd\xf3\xa1Xo\xd0\x13\xd0\xcaE{6\xb1\x92\xfa8\xd7\xb2\xdd\x7f\xe4{\xbbv?\xd3*,<\xa4\xbc:\xea\x9e\xaa\x01\xab\x1e\x80@\xd3\xb1\xba"\xee^[\xb8{5\xb30U\xb4\x0c\xc1\xbd,\xb2#\xf0\xe8S\x91\xde/\xb7\xfa\x1b\x99mn\x01\xe3\xf4\xb3\x81T\xe5M\x8100\x06E\x00\t)\xc08\x08\x05\xe3\x90\x02\xc2\x84m*\xc2\x08\xe7\xeb\x16\xd3\x00!\xa0\x1a\xa4\x00\xa5\x10\xb6\xbb\x07\xb92\xd7=D0\rS\xb7\x97\x87\xdf\x9e\xd5<t\xcfW\xa3\x8dQ\xef\xfboN)\x89\xde\xfe\x96hWp\xe8\xcd)\xd3\x10\xbb\x9el\xf9\xd2\x89\x8e\xdb\x972\xf7?\xce\x1d<\xd9\xbd\x90*\x8d\x7f\x90\xdd{\xa8m\xf8\x9d\xd9\xc7\x06:\xc2\xed\x9e\xb5\xfcsj\xadN>Q\r\xe9D~a\xa6\xe8k\xd0\xae\xfcvrv,?\x9f,t=\xd1|\xe57\x93\xa3\xff\x9e\x9f\x1eY\xea\xeckj\xef\n\x9a\x86\xba\xf9V\xea\xfa\x1fg\xe6\x92\xf9\xd2\xb2\xf9\xd1\xe5\x07\x17O\x8f\xdb\xa6ll\xd5]\xd3\xd9C\x90\xa0\xa0q\xb6\x92)O\xdfZ\xf6\x878\xf72c\xc5\x9e\x1c^\xf4\x87\xb9?\xac[e9q3\xbbZ03\xd3\x05\xbb,\xe2O\xb7&\xaef\xb9\x97\xa5\x13\x85\xdb\x97\x1e\xec9\x10\xe5\xde\xfa\x9d\xb7\x82\xe4N^\xdb\x92\xad\x9d\x81\xfe\xafo\xcf\xde/-\xce\x96t?\xcb\xce\x94\xa2\x9d\x81\x96\x0e\xaf\xe6\xa1}Gc\x91\x1d\x81\xc4\xb5l\xe6\x93\xe2\xfctalh!?g\xb4u\x07\xfa\x06\xda\xffu~\xaa\\\x92\x94\xa2\xd6\xad\xa3\x13V\xacJ!\xd0\xa4/\xcf\x197\xff\x9a\xea\xec\x0b7w\xf8?\xb77|\xfcG\xf1\\\xa6\\X\xb2t\x1f\xbb\xfe\xa7\x99\x91\x7f\xa4\x97\xd2\xc6\xa1\x17\xbbO\xfc$\x1e\x8c\xe8\xb9\x8c\xb1-\x1e:\xf8\x9d\x9d\xe5\xa2=\xf3Q\x8e\xd6\x9b\xb8\xdc\xf9\xb4\xd1\x06\xe5j\xce\x02TC\x8b\xae\x14\xb1V\x857\xa8\x95\xf26\xd5\x88m\x885\x95SN\xfcA\xaeq\x14\x16m\x10\x02\xa2\xbc\x01\xcd(\xd8\x84\x12\xdd\xcf ]b\xae\x97\xb9\x95\xf9\x9b0\x00P\x02\n\xa0\x04R\x81\x12(`\xad\'AB\x01J\x01\n\x94B)\x10\n)@(\xa0\xa0T\x9d:\xe0\xeeOdc\xab\x1c\xd5Z\xaa\x8d\xdf\xda`\xaf\xb5\t%\xb06V\xb8\xbc9\xf2\xc7\xcd\xa8\xaa\xd9\xfc?\xcb\x9d\xa6\xf5T\xfe\x99\xac\x9a\x11\xff\xbfV\xcb. \xe1\xc3y\xf6\x00\x00\x00\x00IEND\xaeB`\x82'

def rest_message():
    messagebox.showinfo(title=APP_TITLE, message='You should rest')
    start()

def stop():
    global timer_btn_color
    timer_btn.config(bg = '#00bc00', text='Start Timer', command=start)
    timer_btn_color = '#00bc00'
    window.after_cancel(after_id)

def start():
    global after_id, timer_btn_color
    try:
        time = int(minutes_var.get() * 60 * 1000)
    except:
        messagebox.showerror(title = APP_TITLE, message = 'Invalid time')
    else:
        timer_btn.config(bg = '#ff1629', text='Stop Timer', command=stop)
        timer_btn_color = '#ff1629'
        after_id = window.after(time, rest_message)

window = tk.Tk()
window.title(APP_TITLE)

# --- Application icon ---

icon = tk.PhotoImage(data=ICON_BYTES)
window.iconphoto(True, icon)

# --- Application Main Frame ---

frm = tk.Frame(bd=5)
frm.pack()

minutes_lbl = tk.Label(frm,text = 'Time in minutes:')
minutes_var = tk.DoubleVar(value = 20)

# --- Start/Stop Timer button

is_number_register = window.register(lambda text : True if re.fullmatch(r'[\d\.]*', text) and text.count('.') < 2 else False)
minutes_entry = ttk.Spinbox(frm,textvariable = minutes_var, validate='key', validatecommand=(is_number_register, '%P'), from_=0,to=float('inf'))
timer_btn = tk.Button(frm,text='Start Timer', bg = '#00bc00', command=start, cursor='hand2')

minutes_lbl.grid(row = 0, column = 0)
minutes_entry.grid(row=0,column=1,padx=5)
timer_btn.grid(row=0,column=2)

timer_btn.bind('<Enter>', lambda event : timer_btn.config(bg='#9fbc00' if timer_btn_color == '#00bc00' else '#ff8629'))
timer_btn.bind('<Leave>', lambda event : timer_btn.config(bg='#00bc00' if timer_btn_color == '#00bc00' else '#ff3629'))

# --- This launchs the program ---

window.mainloop()
